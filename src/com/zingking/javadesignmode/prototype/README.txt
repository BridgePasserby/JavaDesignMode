原型模式
Prototype Pattern
1.定义
Specify the kinds of objects to create using a prototypical instance,and create new objects by copying this prototype.
用原型实力制定创建对象的种类，并且通过拷贝这些原型创建新的对象。

2.组成
核心就是clone方法，要被克隆的类需要实现标示接口 Cloneable 表示该实例可以被克隆。没有实现改接口的话会抛
CloneNotSupportedException异常。

3.优缺点
①性能高/优良
原型(Clone)模式是在内存二进制流的拷贝，比直接new一个对象性能高很多，特别是在循环体内产生大量对象时，原型模式的优点更好体
现。
②逃避钩子函数的约束
既是优点也是缺点，直接在内存中拷贝，构造函数不会执行。

4.试用场景
①资源优化场景
类的初始化需要消化很多资源，资源包括数据、硬件资源等，这时候可以clone已经初始化好的一个实例，减少资源消耗
②性能和安全要求的场景
通过new产生一个对象需要非常繁琐的数据准备或范文权限，则可以使用原型模式。todo 什么意思？
③一个对象多个修改者的场景
一个对象需要提供给其他对象向访问，而且各个调用者可能都需要修改其值时，可以考虑使用原型模式拷贝多个对象共调用者使用

一般原型模式很少单独出现，通常是和工厂方法一起出现，通过clong方法创建一个对象，然后由工厂方法提供给调用者。

深克隆和浅克隆
浅克隆是只拷贝本对象及对象的基本类型和string数据，其对象内部的引用 对象等都不拷贝，还是指向原生对象的内部元素地址。
String没有clone方法，是通过字符串池（stringpool）在需要的时候才在内存中创建新的字符串。

深克隆是拷贝所有数据，clone体和真身互不影响













