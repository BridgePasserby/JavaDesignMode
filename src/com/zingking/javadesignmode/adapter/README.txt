适配器模式
Adapter Pattern
1.定义
Convert the interface of a class into another interface clients expect.Adapter lets classes work together that could't
otherwise because of incompatible interfaces.
将一个类的接口变换成客户端所期待的另一种接口，从而使原本因接口不匹配而无法在一起工作的两个类能够在一起工作。
类似于变压器，插头转换器。把美国110v电器带回中国用，就要用变压器变换电压，达到正常使用。
一般在设计初期不考虑该种模式，该种模式主要是用于处理兼容问题。

2.组成
①Target目标角色
该角色是我们期望转换为的接口，即期望其他类型转换成这个接口。在电器例子中这个角色就是中国的220v电压

②Adaptee源角色
被转换的角色，即不符合使用环境需要做转换的角色。在电器例子中这个角色就是美国的110v电压。
注意Target目标角色和Adaptee源角色在原理上是相互的，如果把中国电器拿到美国用，那么220v是Adaptee，110v是targe，刚好互换

③Adapter适配器角色
适配器模式的核心角色，其他两个都是已经存在的角色，而适配器角色是需要新建立的，它的职责是：通过继承或关联方式把源角色转
换为目标角色

3.优缺点
①优点：
适配器模式可以让两个没有任何关系的类在一起运行

灵活性好
不想要适配器，直接删除就是，不需要修改其他的

4.适用场景
设计阶段不需要考虑适配器模式，适配器模式是目的是兼容新旧系统或者兼容外部系统而设计的

5.分类
类适配器：间接继承
对象适配器：对象的组合(Composition)关系
缺省适配器：目标角色和原角色是同一个，增加默认实现(Adapter)抽象类，后面的类继承自该抽象类。就是Base类？

6.demo
电压例子中属性不好确定，这里改为用户信息

两个系统(或新旧两种JavaBean)中用户信息的接口不一样，需要在一个系统的正常运行，例如：公司内部员工系统和外包公司员工系统中
的关于员工信息的结构同。
公司内部员工系统需要对接外包公司系统
目标角色就是公司内部员工信息结构
源角色就是外包公司员工结构
需要完成一个适配器

















